package me.jeugenedev.croc.analyzer;

import java.util.Collection;

/**
 * Класс {@code TextAnalyzer} является шаблоном для всех текстовых
 * анализаторов. Каждый наследник данного класса должен предоставлять
 * реализацию для анализа текста конкретной предметной области.
 * Класс {@code TextAnalyzer} определяет контракт для поиска в
 * последовательностях символов подпоследовательностей, которые
 * удовлетворяют определенным паттернам в конкретных реализациях
 * данного класса.
 */
public abstract class TextAnalyzer {
    /**
     * Последовательность символов для анализа.
     */
    private final CharSequence text;

    /**
     * Создает текстовый анализатор для конкретной последовательности символов.
     * @param text Последовательность символов
     */
    public TextAnalyzer(CharSequence text) {
        this.text = text;
    }

    /**
     * Метод {@code getText()} предоставляет доступ к последовательности символов,
     * которая подвергается анализу.
     * @return Последовательность символов
     */
    public CharSequence getText() {
        return text;
    }

    /**
     * Метод {@code findAll} выполняет полный анализ текста, осуществляя поиск среди его
     * подпоследовательностей таких подпоследовательностей, которые удовлетворяют
     * общему паттерну конкретной реализации.
     * @return Последовательность последовательностей символов
     */
    public abstract Collection<? extends CharSequence> findAll();

    /**
     * Метод {@code next} итерирует по подпоследовательностям символов, где каждая
     * подпоследовательность символов удовлетворяет общему паттерну конкретной
     * реализации.
     * @return Следующая подпоследовательность символов
     * @throws NextNotFoundException если следующая подпоследовательность не была
     * найдена.
     */
    public abstract CharSequence next();
}
